name: mssql2019-posh5

on: push

jobs:
  run_auto-masklet:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install rgclone CLI and create data container
        id: createDc
        env:
          RGCLONE_API_ENDPOINT: ${{ secrets.RGCLONE_API_ENDPOINT }}
          RGCLONE_ACCESS_TOKEN: ${{ secrets.RGCLONE_ACCESS_TOKEN }}
        run: |
          # Download the rgclone CLI
          $downloadUrl = $env:RGCLONE_API_ENDPOINT + "cloning-api/download/cli/windows-amd64"
          $zipFile = ".\rgclone.zip"
          $rgCloneLocation = "."
          Write-Output "  Downloading rgclone.exe zip file..."
          Write-Output "    from: $downloadUrl"
          Write-Output "    to:   $zipFile"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
          Write-Output "  Extracting zip to: $rgCloneLocation"
          Add-Type -assembly "System.IO.Compression.Filesystem";
          [IO.Compression.Zipfile]::ExtractToDirectory($zipFile, $rgCloneLocation);

          # Create an empty SQL Server instance on which to run auto-masklet
          Write-Output "Creating data container"
          $output = .\rgclone create dc -i 298 -t 10m -o json | ConvertFrom-Json
          $dbPassword = $output.password
          $dbUser = $output.user
          $sqlhost = $output.host
          $sqlport = $output.port
          $instance = "${sqlhost},${sqlport}"
          Write-Output "Data container created successfully and available at: $instance"

          # Set output values so that I can use them in subsequent steps
          echo "dbUser=$dbUser" >> $GITHUB_STATE
          echo "dbPassword=$dbPassword" >> $GITHUB_STATE
          echo "instance=$instance" >> $GITHUB_STATE

      - name: Run a command in PowerShell 5
        run: |
          powershell -Command "
            Write-Output 'Running in PowerShell 5';
            $PSVersionTable;
            Write-Output 'Running Auto-Masklet...';
            Write-Output '  -sqlInstance ${{ steps.createDc.outputs.instance }}';
            Write-Output '  -sqlUser ${{ steps.createDc.outputs.dbUser }}';
            .\run-auto-masklet.ps1 -sqlUser '${{ steps.createDc.outputs.dbUser }}' -sqlPassword '${{ steps.createDc.outputs.dbPassword }}' -sqlInstance '${{ steps.createDc.outputs.instance }}' -autoContinue -skipAuth;
          "
        
      - name: Run a command in PowerShell 7
        run: |
          pwsh -Command "Write-Host 'Running in PowerShell 7'; $PSVersionTable"
          pwsh -Command 'Write-Output "Running Auto-Masklet..."'
          pwsh -Command 'Write-Output `".\run-auto-masklet.ps1 -sqlUser ${{ steps.createDc.outputs.dbUser }} -sqlPassword ${{ steps.createDc.outputs.dbPassword }} -sqlInstance ${{ steps.createDc.outputs.instance }} -autoContinue -skipAuth`"'
          pwsh -Command ".\run-auto-masklet.ps1 -sqlUser ${{ steps.createDc.outputs.dbUser }} -sqlPassword ${{ steps.createDc.outputs.dbPassword }} -sqlInstance ${{ steps.createDc.outputs.instance }} -autoContinue -skipAuth"

